[0.000000] (-) TimerEvent: {}
[0.000111] (semnav) JobQueued: {'identifier': 'semnav', 'dependencies': OrderedDict()}
[0.000170] (semnav) JobStarted: {'identifier': 'semnav'}
[0.017892] (semnav) JobProgress: {'identifier': 'semnav', 'progress': 'cmake'}
[0.025129] (semnav) JobProgress: {'identifier': 'semnav', 'progress': 'build'}
[0.029320] (semnav) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/neha/ros2_ws/src/semnav_migration/build/semnav', '--', '-j2', '-l2'], 'cwd': '/home/neha/ros2_ws/src/semnav_migration/build/semnav', 'env': OrderedDict({'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'neha', 'XDG_SESSION_TYPE': 'wayland', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/neha/ros2_ws/src/install/object_pose_interface_msgs/lib:/opt/ros/jazzy/opt/rviz_ogre_vendor/lib:/opt/ros/jazzy/lib/x86_64-linux-gnu:/opt/ros/jazzy/opt/gz_math_vendor/lib:/opt/ros/jazzy/opt/gz_utils_vendor/lib:/opt/ros/jazzy/opt/gz_cmake_vendor/lib:/opt/ros/jazzy/lib', 'HOME': '/home/neha', 'OLDPWD': '/home/neha/ros2_ws/src/semnav_migration/src', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'SYSTEMD_EXEC_PID': '1992', 'GSM_SKIP_SSH_AGENT_WORKAROUND': 'true', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'DEBUGINFOD_URLS': 'https://debuginfod.ubuntu.com', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'COLCON_PREFIX_PATH': '/home/neha/ros2_ws/src/semnav_migration/install:/home/neha/ros2_ws/src/install', 'ROS_DISTRO': 'jazzy', 'LOGNAME': 'neha', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'MEMORY_PRESSURE_WATCH': '/sys/fs/cgroup/user.slice/user-1000.slice/user@1000.service/session.slice/org.gnome.Shell@wayland.service/memory.pressure', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'neha', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'PATH': '/opt/ros/jazzy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/neha-Inspiron-3580:@/tmp/.ICE-unix/1958,unix/neha-Inspiron-3580:/tmp/.ICE-unix/1958', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_TERMINAL_SCREEN': '/org/gnome/Terminal/screen/9cf301d5_d6eb_4725_bda1_1cffc2fc2c7b', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.WILDQ2', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=00:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.avif=01;35:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:*~=00;90:*#=00;90:*.bak=00;90:*.crdownload=00;90:*.dpkg-dist=00;90:*.dpkg-new=00;90:*.dpkg-old=00;90:*.dpkg-tmp=00;90:*.old=00;90:*.orig=00;90:*.part=00;90:*.rej=00;90:*.rpmnew=00;90:*.rpmorig=00;90:*.rpmsave=00;90:*.swp=00;90:*.tmp=00;90:*.ucf-dist=00;90:*.ucf-new=00;90:*.ucf-old=00;90:', 'GNOME_TERMINAL_SERVICE': ':1.122', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/home/neha/ros2_ws/src/install/test_pkg:/home/neha/ros2_ws/src/install/object_pose_interface_msgs:/opt/ros/jazzy', 'SHELL': '/bin/bash', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'ROS_AUTOMATIC_DISCOVERY_RANGE': 'SUBNET', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/neha/ros2_ws/src/semnav_migration/build/semnav', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/neha/ros2_ws/src/install/object_pose_interface_msgs/lib/python3.12/site-packages:/opt/ros/jazzy/lib/python3.12/site-packages', 'COLCON': '1', 'MEMORY_PRESSURE_WRITE': 'c29tZSAyMDAwMDAgMjAwMDAwMAA=', 'VTE_VERSION': '7600', 'CMAKE_PREFIX_PATH': '/home/neha/ros2_ws/src/install/test_pkg:/home/neha/ros2_ws/src/install/object_pose_interface_msgs:/opt/ros/jazzy/opt/gz_math_vendor:/opt/ros/jazzy/opt/gz_utils_vendor:/opt/ros/jazzy/opt/gz_cmake_vendor:/opt/ros/jazzy'}), 'shell': False}
[0.098544] (-) TimerEvent: {}
[0.198811] (-) TimerEvent: {}
[0.239730] (semnav) StdoutLine: {'line': b'[ 14%] Built target reactive_planner\n'}
[0.298981] (-) TimerEvent: {}
[0.370266] (semnav) StdoutLine: {'line': b'[ 23%] Built target navigation\n'}
[0.399108] (-) TimerEvent: {}
[0.499353] (-) TimerEvent: {}
[0.508669] (semnav) StdoutLine: {'line': b'[ 28%] Building CXX object CMakeFiles/navigation_semantic.dir/src/navigation_semantic.cpp.o\n'}
[0.599520] (-) TimerEvent: {}
[0.699772] (-) TimerEvent: {}
[0.800032] (-) TimerEvent: {}
[0.900236] (-) TimerEvent: {}
[1.000493] (-) TimerEvent: {}
[1.100744] (-) TimerEvent: {}
[1.201009] (-) TimerEvent: {}
[1.301212] (-) TimerEvent: {}
[1.401463] (-) TimerEvent: {}
[1.501718] (-) TimerEvent: {}
[1.601985] (-) TimerEvent: {}
[1.702192] (-) TimerEvent: {}
[1.802454] (-) TimerEvent: {}
[1.902717] (-) TimerEvent: {}
[2.002985] (-) TimerEvent: {}
[2.103223] (-) TimerEvent: {}
[2.203475] (-) TimerEvent: {}
[2.303724] (-) TimerEvent: {}
[2.404671] (-) TimerEvent: {}
[2.504937] (-) TimerEvent: {}
[2.605152] (-) TimerEvent: {}
[2.705407] (-) TimerEvent: {}
[2.805664] (-) TimerEvent: {}
[2.905948] (-) TimerEvent: {}
[3.006150] (-) TimerEvent: {}
[3.108063] (-) TimerEvent: {}
[3.208309] (-) TimerEvent: {}
[3.308564] (-) TimerEvent: {}
[3.408819] (-) TimerEvent: {}
[3.509078] (-) TimerEvent: {}
[3.609275] (-) TimerEvent: {}
[3.709526] (-) TimerEvent: {}
[3.809785] (-) TimerEvent: {}
[3.910049] (-) TimerEvent: {}
[4.010261] (-) TimerEvent: {}
[4.110524] (-) TimerEvent: {}
[4.210784] (-) TimerEvent: {}
[4.311056] (-) TimerEvent: {}
[4.411278] (-) TimerEvent: {}
[4.511546] (-) TimerEvent: {}
[4.611801] (-) TimerEvent: {}
[4.712062] (-) TimerEvent: {}
[4.812264] (-) TimerEvent: {}
[4.912542] (-) TimerEvent: {}
[5.012795] (-) TimerEvent: {}
[5.113056] (-) TimerEvent: {}
[5.213264] (-) TimerEvent: {}
[5.313521] (-) TimerEvent: {}
[5.413775] (-) TimerEvent: {}
[5.514043] (-) TimerEvent: {}
[5.614246] (-) TimerEvent: {}
[5.714498] (-) TimerEvent: {}
[5.814785] (-) TimerEvent: {}
[5.915047] (-) TimerEvent: {}
[6.015306] (-) TimerEvent: {}
[6.115511] (-) TimerEvent: {}
[6.215712] (-) TimerEvent: {}
[6.315925] (-) TimerEvent: {}
[6.416191] (-) TimerEvent: {}
[6.516442] (-) TimerEvent: {}
[6.616697] (-) TimerEvent: {}
[6.717095] (-) TimerEvent: {}
[6.817299] (-) TimerEvent: {}
[6.917508] (-) TimerEvent: {}
[7.017719] (-) TimerEvent: {}
[7.117930] (-) TimerEvent: {}
[7.218697] (-) TimerEvent: {}
[7.318961] (-) TimerEvent: {}
[7.419188] (-) TimerEvent: {}
[7.519448] (-) TimerEvent: {}
[7.619704] (-) TimerEvent: {}
[7.719912] (-) TimerEvent: {}
[7.820110] (-) TimerEvent: {}
[7.920359] (-) TimerEvent: {}
[8.020619] (-) TimerEvent: {}
[8.120825] (-) TimerEvent: {}
[8.221058] (-) TimerEvent: {}
[8.321295] (-) TimerEvent: {}
[8.421562] (-) TimerEvent: {}
[8.521823] (-) TimerEvent: {}
[8.622089] (-) TimerEvent: {}
[8.722336] (-) TimerEvent: {}
[8.822601] (-) TimerEvent: {}
[8.922918] (-) TimerEvent: {}
[9.023106] (-) TimerEvent: {}
[9.123360] (-) TimerEvent: {}
[9.223577] (-) TimerEvent: {}
[9.323786] (-) TimerEvent: {}
[9.424014] (-) TimerEvent: {}
[9.524225] (-) TimerEvent: {}
[9.624509] (-) TimerEvent: {}
[9.724772] (-) TimerEvent: {}
[9.825043] (-) TimerEvent: {}
[9.925245] (-) TimerEvent: {}
[10.025452] (-) TimerEvent: {}
[10.125711] (-) TimerEvent: {}
[10.226027] (-) TimerEvent: {}
[10.327082] (-) TimerEvent: {}
[10.429050] (-) TimerEvent: {}
[10.529757] (-) TimerEvent: {}
[10.631680] (-) TimerEvent: {}
[10.733096] (-) TimerEvent: {}
[10.847337] (-) TimerEvent: {}
[10.947571] (-) TimerEvent: {}
[11.048088] (-) TimerEvent: {}
[11.148291] (-) TimerEvent: {}
[11.248486] (-) TimerEvent: {}
[11.348687] (-) TimerEvent: {}
[11.448936] (-) TimerEvent: {}
[11.549205] (-) TimerEvent: {}
[11.651088] (-) TimerEvent: {}
[11.752069] (-) TimerEvent: {}
[11.852276] (-) TimerEvent: {}
[11.952493] (-) TimerEvent: {}
[12.052770] (-) TimerEvent: {}
[12.153140] (-) TimerEvent: {}
[12.253601] (-) TimerEvent: {}
[12.359824] (-) TimerEvent: {}
[12.463375] (-) TimerEvent: {}
[12.567442] (-) TimerEvent: {}
[12.671120] (-) TimerEvent: {}
[12.771328] (-) TimerEvent: {}
[12.871539] (-) TimerEvent: {}
[12.972340] (-) TimerEvent: {}
[13.072554] (-) TimerEvent: {}
[13.172790] (-) TimerEvent: {}
[13.273585] (-) TimerEvent: {}
[13.373847] (-) TimerEvent: {}
[13.474064] (-) TimerEvent: {}
[13.575675] (-) TimerEvent: {}
[13.675921] (-) TimerEvent: {}
[13.776209] (-) TimerEvent: {}
[13.876420] (-) TimerEvent: {}
[13.976696] (-) TimerEvent: {}
[14.077539] (-) TimerEvent: {}
[14.177756] (-) TimerEvent: {}
[14.278052] (-) TimerEvent: {}
[14.380056] (-) TimerEvent: {}
[14.480262] (-) TimerEvent: {}
[14.580474] (-) TimerEvent: {}
[14.680688] (-) TimerEvent: {}
[14.780905] (-) TimerEvent: {}
[14.881136] (-) TimerEvent: {}
[14.981354] (-) TimerEvent: {}
[15.081575] (-) TimerEvent: {}
[15.181801] (-) TimerEvent: {}
[15.282030] (-) TimerEvent: {}
[15.383752] (-) TimerEvent: {}
[15.484029] (-) TimerEvent: {}
[15.584268] (-) TimerEvent: {}
[15.684503] (-) TimerEvent: {}
[15.787062] (-) TimerEvent: {}
[15.887268] (-) TimerEvent: {}
[15.987551] (-) TimerEvent: {}
[16.087814] (-) TimerEvent: {}
[16.188080] (-) TimerEvent: {}
[16.288327] (-) TimerEvent: {}
[16.389958] (-) TimerEvent: {}
[16.490604] (-) TimerEvent: {}
[16.590805] (-) TimerEvent: {}
[16.691072] (-) TimerEvent: {}
[16.791391] (-) TimerEvent: {}
[16.891651] (-) TimerEvent: {}
[16.992614] (-) TimerEvent: {}
[17.092816] (-) TimerEvent: {}
[17.193043] (-) TimerEvent: {}
[17.293248] (-) TimerEvent: {}
[17.393502] (-) TimerEvent: {}
[17.493770] (-) TimerEvent: {}
[17.594074] (-) TimerEvent: {}
[17.696173] (-) TimerEvent: {}
[17.796381] (-) TimerEvent: {}
[17.896647] (-) TimerEvent: {}
[18.000277] (-) TimerEvent: {}
[18.100531] (-) TimerEvent: {}
[18.200790] (-) TimerEvent: {}
[18.301021] (-) TimerEvent: {}
[18.402741] (-) TimerEvent: {}
[18.505852] (-) TimerEvent: {}
[18.607704] (-) TimerEvent: {}
[18.707989] (-) TimerEvent: {}
[18.808203] (-) TimerEvent: {}
[18.909410] (-) TimerEvent: {}
[19.011044] (-) TimerEvent: {}
[19.111247] (-) TimerEvent: {}
[19.212357] (-) TimerEvent: {}
[19.312580] (-) TimerEvent: {}
[19.412807] (-) TimerEvent: {}
[19.513054] (-) TimerEvent: {}
[19.613280] (-) TimerEvent: {}
[19.715444] (-) TimerEvent: {}
[19.817177] (-) TimerEvent: {}
[19.917429] (-) TimerEvent: {}
[20.017687] (-) TimerEvent: {}
[20.117946] (-) TimerEvent: {}
[20.218172] (-) TimerEvent: {}
[20.320617] (-) TimerEvent: {}
[20.420868] (-) TimerEvent: {}
[20.521124] (-) TimerEvent: {}
[20.621370] (-) TimerEvent: {}
[20.721894] (-) TimerEvent: {}
[20.822344] (-) TimerEvent: {}
[20.922547] (-) TimerEvent: {}
[21.022796] (-) TimerEvent: {}
[21.123061] (-) TimerEvent: {}
[21.223309] (-) TimerEvent: {}
[21.324078] (-) TimerEvent: {}
[21.424331] (-) TimerEvent: {}
[21.526146] (-) TimerEvent: {}
[21.626414] (-) TimerEvent: {}
[21.728132] (-) TimerEvent: {}
[21.829023] (-) TimerEvent: {}
[21.929788] (-) TimerEvent: {}
[22.031075] (-) TimerEvent: {}
[22.131318] (-) TimerEvent: {}
[22.231571] (-) TimerEvent: {}
[22.331831] (-) TimerEvent: {}
[22.432063] (-) TimerEvent: {}
[22.533355] (-) TimerEvent: {}
[22.633569] (-) TimerEvent: {}
[22.733799] (-) TimerEvent: {}
[22.834063] (-) TimerEvent: {}
[22.934410] (-) TimerEvent: {}
[23.034609] (-) TimerEvent: {}
[23.136060] (-) TimerEvent: {}
[23.236261] (-) TimerEvent: {}
[23.336461] (-) TimerEvent: {}
[23.436710] (-) TimerEvent: {}
[23.536968] (-) TimerEvent: {}
[23.638146] (-) TimerEvent: {}
[23.738352] (-) TimerEvent: {}
[23.838655] (-) TimerEvent: {}
[23.938945] (-) TimerEvent: {}
[24.041067] (-) TimerEvent: {}
[24.142388] (-) TimerEvent: {}
[24.242593] (-) TimerEvent: {}
[24.342873] (-) TimerEvent: {}
[24.443052] (-) TimerEvent: {}
[24.543265] (-) TimerEvent: {}
[24.643531] (-) TimerEvent: {}
[24.744582] (-) TimerEvent: {}
[24.844789] (-) TimerEvent: {}
[24.947598] (-) TimerEvent: {}
[25.048664] (-) TimerEvent: {}
[25.148931] (-) TimerEvent: {}
[25.249105] (-) TimerEvent: {}
[25.349326] (-) TimerEvent: {}
[25.451445] (-) TimerEvent: {}
[25.551704] (-) TimerEvent: {}
[25.652059] (-) TimerEvent: {}
[25.752285] (-) TimerEvent: {}
[25.852559] (-) TimerEvent: {}
[25.952823] (-) TimerEvent: {}
[26.053086] (-) TimerEvent: {}
[26.153336] (-) TimerEvent: {}
[26.253595] (-) TimerEvent: {}
[26.353862] (-) TimerEvent: {}
[26.454105] (-) TimerEvent: {}
[26.554359] (-) TimerEvent: {}
[26.654579] (-) TimerEvent: {}
[26.755128] (-) TimerEvent: {}
[26.855373] (-) TimerEvent: {}
[26.955622] (-) TimerEvent: {}
[27.055884] (-) TimerEvent: {}
[27.156103] (-) TimerEvent: {}
[27.256350] (-) TimerEvent: {}
[27.356619] (-) TimerEvent: {}
[27.458046] (-) TimerEvent: {}
[27.559096] (-) TimerEvent: {}
[27.659342] (-) TimerEvent: {}
[27.759602] (-) TimerEvent: {}
[27.859867] (-) TimerEvent: {}
[27.960106] (-) TimerEvent: {}
[28.060360] (-) TimerEvent: {}
[28.160624] (-) TimerEvent: {}
[28.260885] (-) TimerEvent: {}
[28.361103] (-) TimerEvent: {}
[28.461347] (-) TimerEvent: {}
[28.561600] (-) TimerEvent: {}
[28.661866] (-) TimerEvent: {}
[28.762111] (-) TimerEvent: {}
[28.862440] (-) TimerEvent: {}
[28.962705] (-) TimerEvent: {}
[29.062964] (-) TimerEvent: {}
[29.163189] (-) TimerEvent: {}
[29.263447] (-) TimerEvent: {}
[29.365121] (-) TimerEvent: {}
[29.465396] (-) TimerEvent: {}
[29.565630] (-) TimerEvent: {}
[29.665892] (-) TimerEvent: {}
[29.766102] (-) TimerEvent: {}
[29.866374] (-) TimerEvent: {}
[29.966628] (-) TimerEvent: {}
[30.066889] (-) TimerEvent: {}
[30.167105] (-) TimerEvent: {}
[30.267353] (-) TimerEvent: {}
[30.367618] (-) TimerEvent: {}
[30.467883] (-) TimerEvent: {}
[30.568105] (-) TimerEvent: {}
[30.669623] (-) TimerEvent: {}
[30.769889] (-) TimerEvent: {}
[30.870108] (-) TimerEvent: {}
[30.970361] (-) TimerEvent: {}
[31.070630] (-) TimerEvent: {}
[31.170894] (-) TimerEvent: {}
[31.271443] (-) TimerEvent: {}
[31.374070] (-) TimerEvent: {}
[31.474307] (-) TimerEvent: {}
[31.574523] (-) TimerEvent: {}
[31.676057] (-) TimerEvent: {}
[31.776273] (-) TimerEvent: {}
[31.876487] (-) TimerEvent: {}
[31.976704] (-) TimerEvent: {}
[32.076924] (-) TimerEvent: {}
[32.177147] (-) TimerEvent: {}
[32.277357] (-) TimerEvent: {}
[32.377568] (-) TimerEvent: {}
[32.477782] (-) TimerEvent: {}
[32.578017] (-) TimerEvent: {}
[32.678226] (-) TimerEvent: {}
[32.778440] (-) TimerEvent: {}
[32.878730] (-) TimerEvent: {}
[32.978938] (-) TimerEvent: {}
[33.079158] (-) TimerEvent: {}
[33.179364] (-) TimerEvent: {}
[33.279579] (-) TimerEvent: {}
[33.381610] (-) TimerEvent: {}
[33.481843] (-) TimerEvent: {}
[33.582156] (-) TimerEvent: {}
[33.682382] (-) TimerEvent: {}
[33.784043] (-) TimerEvent: {}
[33.886050] (-) TimerEvent: {}
[33.987735] (-) TimerEvent: {}
[34.087950] (-) TimerEvent: {}
[34.188273] (-) TimerEvent: {}
[34.288486] (-) TimerEvent: {}
[34.388694] (-) TimerEvent: {}
[34.489135] (-) TimerEvent: {}
[34.590046] (-) TimerEvent: {}
[34.690911] (-) TimerEvent: {}
[34.791129] (-) TimerEvent: {}
[34.891343] (-) TimerEvent: {}
[34.991598] (-) TimerEvent: {}
[35.094070] (-) TimerEvent: {}
[35.195470] (-) TimerEvent: {}
[35.295669] (-) TimerEvent: {}
[35.395926] (-) TimerEvent: {}
[35.496153] (-) TimerEvent: {}
[35.596374] (-) TimerEvent: {}
[35.696916] (-) TimerEvent: {}
[35.797206] (-) TimerEvent: {}
[35.900073] (-) TimerEvent: {}
[36.000310] (-) TimerEvent: {}
[36.100533] (-) TimerEvent: {}
[36.200761] (-) TimerEvent: {}
[36.301002] (-) TimerEvent: {}
[36.401469] (-) TimerEvent: {}
[36.501691] (-) TimerEvent: {}
[36.604025] (-) TimerEvent: {}
[36.704254] (-) TimerEvent: {}
[36.804462] (-) TimerEvent: {}
[36.904680] (-) TimerEvent: {}
[37.005053] (-) TimerEvent: {}
[37.105262] (-) TimerEvent: {}
[37.208500] (-) TimerEvent: {}
[37.308720] (-) TimerEvent: {}
[37.408968] (-) TimerEvent: {}
[37.509945] (-) TimerEvent: {}
[37.610700] (-) TimerEvent: {}
[37.711521] (-) TimerEvent: {}
[37.811735] (-) TimerEvent: {}
[37.911952] (-) TimerEvent: {}
[38.013059] (-) TimerEvent: {}
[38.113271] (-) TimerEvent: {}
[38.213504] (-) TimerEvent: {}
[38.313725] (-) TimerEvent: {}
[38.413942] (-) TimerEvent: {}
[38.514372] (-) TimerEvent: {}
[38.615120] (-) TimerEvent: {}
[38.715382] (-) TimerEvent: {}
[38.816014] (-) TimerEvent: {}
[38.916337] (-) TimerEvent: {}
[39.016631] (-) TimerEvent: {}
[39.117744] (-) TimerEvent: {}
[39.220482] (-) TimerEvent: {}
[39.320711] (-) TimerEvent: {}
[39.421525] (-) TimerEvent: {}
[39.526082] (-) TimerEvent: {}
[39.626290] (-) TimerEvent: {}
[39.726526] (-) TimerEvent: {}
[39.826759] (-) TimerEvent: {}
[39.927042] (-) TimerEvent: {}
[40.027278] (-) TimerEvent: {}
[40.127543] (-) TimerEvent: {}
[40.229059] (-) TimerEvent: {}
[40.329317] (-) TimerEvent: {}
[40.431195] (-) TimerEvent: {}
[40.531561] (-) TimerEvent: {}
[40.631842] (-) TimerEvent: {}
[40.732060] (-) TimerEvent: {}
[40.832264] (-) TimerEvent: {}
[40.932478] (-) TimerEvent: {}
[41.032823] (-) TimerEvent: {}
[41.133087] (-) TimerEvent: {}
[41.233317] (-) TimerEvent: {}
[41.333566] (-) TimerEvent: {}
[41.433825] (-) TimerEvent: {}
[41.534086] (-) TimerEvent: {}
[41.635057] (-) TimerEvent: {}
[41.735266] (-) TimerEvent: {}
[41.835512] (-) TimerEvent: {}
[41.935775] (-) TimerEvent: {}
[42.036045] (-) TimerEvent: {}
[42.136255] (-) TimerEvent: {}
[42.238059] (-) TimerEvent: {}
[42.338270] (-) TimerEvent: {}
[42.438478] (-) TimerEvent: {}
[42.538677] (-) TimerEvent: {}
[42.638888] (-) TimerEvent: {}
[42.739108] (-) TimerEvent: {}
[42.839951] (-) TimerEvent: {}
[42.940664] (-) TimerEvent: {}
[43.043211] (-) TimerEvent: {}
[43.143722] (-) TimerEvent: {}
[43.244001] (-) TimerEvent: {}
[43.345641] (-) TimerEvent: {}
[43.445877] (-) TimerEvent: {}
[43.547417] (-) TimerEvent: {}
[43.647620] (-) TimerEvent: {}
[43.747818] (-) TimerEvent: {}
[43.848036] (-) TimerEvent: {}
[43.949087] (-) TimerEvent: {}
[44.049289] (-) TimerEvent: {}
[44.149490] (-) TimerEvent: {}
[44.249711] (-) TimerEvent: {}
[44.349962] (-) TimerEvent: {}
[44.450904] (-) TimerEvent: {}
[44.553114] (-) TimerEvent: {}
[44.653319] (-) TimerEvent: {}
[44.753526] (-) TimerEvent: {}
[44.853843] (-) TimerEvent: {}
[44.954102] (-) TimerEvent: {}
[45.054349] (-) TimerEvent: {}
[45.154641] (-) TimerEvent: {}
[45.254927] (-) TimerEvent: {}
[45.356082] (-) TimerEvent: {}
[45.456344] (-) TimerEvent: {}
[45.556697] (-) TimerEvent: {}
[45.656944] (-) TimerEvent: {}
[45.758837] (-) TimerEvent: {}
[45.862082] (-) TimerEvent: {}
[45.962292] (-) TimerEvent: {}
[46.062496] (-) TimerEvent: {}
[46.162704] (-) TimerEvent: {}
[46.263000] (-) TimerEvent: {}
[46.363454] (-) TimerEvent: {}
[46.463655] (-) TimerEvent: {}
[46.565147] (-) TimerEvent: {}
[46.665352] (-) TimerEvent: {}
[46.765563] (-) TimerEvent: {}
[46.865848] (-) TimerEvent: {}
[46.966219] (-) TimerEvent: {}
[47.067083] (-) TimerEvent: {}
[47.167321] (-) TimerEvent: {}
[47.267565] (-) TimerEvent: {}
[47.367826] (-) TimerEvent: {}
[47.468103] (-) TimerEvent: {}
[47.568348] (-) TimerEvent: {}
[47.668674] (-) TimerEvent: {}
[47.769016] (-) TimerEvent: {}
[47.869539] (-) TimerEvent: {}
[47.973060] (-) TimerEvent: {}
[48.073268] (-) TimerEvent: {}
[48.173495] (-) TimerEvent: {}
[48.273709] (-) TimerEvent: {}
[48.374342] (-) TimerEvent: {}
[48.474593] (-) TimerEvent: {}
[48.577056] (-) TimerEvent: {}
[48.677283] (-) TimerEvent: {}
[48.777551] (-) TimerEvent: {}
[48.877845] (-) TimerEvent: {}
[48.978106] (-) TimerEvent: {}
[49.078390] (-) TimerEvent: {}
[49.178711] (-) TimerEvent: {}
[49.278955] (-) TimerEvent: {}
[49.379170] (-) TimerEvent: {}
[49.479552] (-) TimerEvent: {}
[49.579769] (-) TimerEvent: {}
[49.680690] (-) TimerEvent: {}
[49.781050] (-) TimerEvent: {}
[49.881384] (-) TimerEvent: {}
[49.981750] (-) TimerEvent: {}
[50.082304] (-) TimerEvent: {}
[50.183966] (-) TimerEvent: {}
[50.284375] (-) TimerEvent: {}
[50.384812] (-) TimerEvent: {}
[50.485170] (-) TimerEvent: {}
[50.585934] (-) TimerEvent: {}
[50.687738] (-) TimerEvent: {}
[50.787950] (-) TimerEvent: {}
[50.888173] (-) TimerEvent: {}
[50.988415] (-) TimerEvent: {}
[51.088656] (-) TimerEvent: {}
[51.188868] (-) TimerEvent: {}
[51.289111] (-) TimerEvent: {}
[51.389351] (-) TimerEvent: {}
[51.489557] (-) TimerEvent: {}
[51.591921] (-) TimerEvent: {}
[51.695196] (-) TimerEvent: {}
[51.795803] (-) TimerEvent: {}
[51.898203] (-) TimerEvent: {}
[51.999920] (-) TimerEvent: {}
[52.104203] (-) TimerEvent: {}
[52.204454] (-) TimerEvent: {}
[52.307680] (-) TimerEvent: {}
[52.407889] (-) TimerEvent: {}
[52.508062] (-) TimerEvent: {}
[52.610059] (-) TimerEvent: {}
[52.710277] (-) TimerEvent: {}
[52.811189] (-) TimerEvent: {}
[52.911913] (-) TimerEvent: {}
[53.012624] (-) TimerEvent: {}
[53.113470] (-) TimerEvent: {}
[53.213685] (-) TimerEvent: {}
[53.315496] (-) TimerEvent: {}
[53.415768] (-) TimerEvent: {}
[53.516007] (-) TimerEvent: {}
[53.616206] (-) TimerEvent: {}
[53.716410] (-) TimerEvent: {}
[53.816915] (-) TimerEvent: {}
[53.918358] (-) TimerEvent: {}
[54.018583] (-) TimerEvent: {}
[54.118844] (-) TimerEvent: {}
[54.219099] (-) TimerEvent: {}
[54.319368] (-) TimerEvent: {}
[54.419585] (-) TimerEvent: {}
[54.520456] (-) TimerEvent: {}
[54.620693] (-) TimerEvent: {}
[54.721942] (-) TimerEvent: {}
[54.822177] (-) TimerEvent: {}
[54.922415] (-) TimerEvent: {}
[55.022630] (-) TimerEvent: {}
[55.123123] (-) TimerEvent: {}
[55.223336] (-) TimerEvent: {}
[55.325049] (-) TimerEvent: {}
[55.425252] (-) TimerEvent: {}
[55.525455] (-) TimerEvent: {}
[55.625997] (-) TimerEvent: {}
[55.726290] (-) TimerEvent: {}
[55.827899] (-) TimerEvent: {}
[55.928109] (-) TimerEvent: {}
[56.028313] (-) TimerEvent: {}
[56.128462] (-) TimerEvent: {}
[56.228675] (-) TimerEvent: {}
[56.328930] (-) TimerEvent: {}
[56.429154] (-) TimerEvent: {}
[56.532402] (-) TimerEvent: {}
[56.632626] (-) TimerEvent: {}
[56.732835] (-) TimerEvent: {}
[56.833058] (-) TimerEvent: {}
[56.933264] (-) TimerEvent: {}
[57.034184] (-) TimerEvent: {}
[57.134445] (-) TimerEvent: {}
[57.234696] (-) TimerEvent: {}
[57.334946] (-) TimerEvent: {}
[57.435156] (-) TimerEvent: {}
[57.535400] (-) TimerEvent: {}
[57.635660] (-) TimerEvent: {}
[57.737187] (-) TimerEvent: {}
[57.837391] (-) TimerEvent: {}
[57.937589] (-) TimerEvent: {}
[58.037788] (-) TimerEvent: {}
[58.138000] (-) TimerEvent: {}
[58.238202] (-) TimerEvent: {}
[58.342011] (-) TimerEvent: {}
[58.442219] (-) TimerEvent: {}
[58.543065] (-) TimerEvent: {}
[58.643262] (-) TimerEvent: {}
[58.743453] (-) TimerEvent: {}
[58.843742] (-) TimerEvent: {}
[58.943999] (-) TimerEvent: {}
[59.044365] (-) TimerEvent: {}
[59.145276] (-) TimerEvent: {}
[59.246023] (-) TimerEvent: {}
[59.346232] (-) TimerEvent: {}
[59.446485] (-) TimerEvent: {}
[59.546740] (-) TimerEvent: {}
[59.647009] (-) TimerEvent: {}
[59.747218] (-) TimerEvent: {}
[59.847471] (-) TimerEvent: {}
[59.947731] (-) TimerEvent: {}
[60.048001] (-) TimerEvent: {}
[60.148211] (-) TimerEvent: {}
[60.248469] (-) TimerEvent: {}
[60.348723] (-) TimerEvent: {}
[60.449025] (-) TimerEvent: {}
[60.549233] (-) TimerEvent: {}
[60.649494] (-) TimerEvent: {}
[60.749750] (-) TimerEvent: {}
[60.850019] (-) TimerEvent: {}
[60.950219] (-) TimerEvent: {}
[61.050478] (-) TimerEvent: {}
[61.150732] (-) TimerEvent: {}
[61.251000] (-) TimerEvent: {}
[61.351203] (-) TimerEvent: {}
[61.451475] (-) TimerEvent: {}
[61.551741] (-) TimerEvent: {}
[61.652009] (-) TimerEvent: {}
[61.752244] (-) TimerEvent: {}
[61.854106] (-) TimerEvent: {}
[61.954295] (-) TimerEvent: {}
[62.054488] (-) TimerEvent: {}
[62.154747] (-) TimerEvent: {}
[62.255022] (-) TimerEvent: {}
[62.355222] (-) TimerEvent: {}
[62.456055] (-) TimerEvent: {}
[62.556265] (-) TimerEvent: {}
[62.656647] (-) TimerEvent: {}
[62.759849] (-) TimerEvent: {}
[62.860097] (-) TimerEvent: {}
[62.960399] (-) TimerEvent: {}
[63.060660] (-) TimerEvent: {}
[63.161267] (-) TimerEvent: {}
[63.263110] (-) TimerEvent: {}
[63.363321] (-) TimerEvent: {}
[63.463581] (-) TimerEvent: {}
[63.565075] (-) TimerEvent: {}
[63.665323] (-) TimerEvent: {}
[63.765577] (-) TimerEvent: {}
[63.865842] (-) TimerEvent: {}
[63.966106] (-) TimerEvent: {}
[64.066345] (-) TimerEvent: {}
[64.166557] (-) TimerEvent: {}
[64.266801] (-) TimerEvent: {}
[64.367036] (-) TimerEvent: {}
[64.467583] (-) TimerEvent: {}
[64.567842] (-) TimerEvent: {}
[64.668104] (-) TimerEvent: {}
[64.768352] (-) TimerEvent: {}
[64.868613] (-) TimerEvent: {}
[64.968856] (-) TimerEvent: {}
[65.069111] (-) TimerEvent: {}
[65.169365] (-) TimerEvent: {}
[65.269620] (-) TimerEvent: {}
[65.370207] (-) TimerEvent: {}
[65.470454] (-) TimerEvent: {}
[65.572820] (-) TimerEvent: {}
[65.673078] (-) TimerEvent: {}
[65.773287] (-) TimerEvent: {}
[65.873544] (-) TimerEvent: {}
[65.973806] (-) TimerEvent: {}
[66.074098] (-) TimerEvent: {}
[66.174348] (-) TimerEvent: {}
[66.274633] (-) TimerEvent: {}
[66.375633] (-) TimerEvent: {}
[66.476653] (-) TimerEvent: {}
[66.577676] (-) TimerEvent: {}
[66.678057] (-) TimerEvent: {}
[66.780025] (-) TimerEvent: {}
[66.882062] (-) TimerEvent: {}
[66.982261] (-) TimerEvent: {}
[67.082512] (-) TimerEvent: {}
[67.182733] (-) TimerEvent: {}
[67.284048] (-) TimerEvent: {}
[67.384253] (-) TimerEvent: {}
[67.484473] (-) TimerEvent: {}
[67.584689] (-) TimerEvent: {}
[67.684909] (-) TimerEvent: {}
[67.785141] (-) TimerEvent: {}
[67.887061] (-) TimerEvent: {}
[67.987271] (-) TimerEvent: {}
[68.087516] (-) TimerEvent: {}
[68.187737] (-) TimerEvent: {}
[68.288115] (-) TimerEvent: {}
[68.389335] (-) TimerEvent: {}
[68.489544] (-) TimerEvent: {}
[68.589801] (-) TimerEvent: {}
[68.690064] (-) TimerEvent: {}
[68.792062] (-) TimerEvent: {}
[68.892735] (-) TimerEvent: {}
[68.992945] (-) TimerEvent: {}
[69.093190] (-) TimerEvent: {}
[69.193399] (-) TimerEvent: {}
[69.293598] (-) TimerEvent: {}
[69.393805] (-) TimerEvent: {}
[69.494032] (-) TimerEvent: {}
[69.594245] (-) TimerEvent: {}
[69.694511] (-) TimerEvent: {}
[69.794778] (-) TimerEvent: {}
[69.894991] (-) TimerEvent: {}
[69.995200] (-) TimerEvent: {}
[70.096109] (-) TimerEvent: {}
[70.196315] (-) TimerEvent: {}
[70.297610] (-) TimerEvent: {}
[70.398194] (-) TimerEvent: {}
[70.498451] (-) TimerEvent: {}
[70.598738] (-) TimerEvent: {}
[70.699014] (-) TimerEvent: {}
[70.799491] (-) TimerEvent: {}
[70.899754] (-) TimerEvent: {}
[71.001063] (-) TimerEvent: {}
[71.101269] (-) TimerEvent: {}
[71.202056] (-) TimerEvent: {}
[71.306105] (-) TimerEvent: {}
[71.406315] (-) TimerEvent: {}
[71.506548] (-) TimerEvent: {}
[71.606776] (-) TimerEvent: {}
[71.706984] (-) TimerEvent: {}
[71.808392] (-) TimerEvent: {}
[71.908623] (-) TimerEvent: {}
[72.008847] (-) TimerEvent: {}
[72.110541] (-) TimerEvent: {}
[72.211126] (-) TimerEvent: {}
[72.313055] (-) TimerEvent: {}
[72.413660] (-) TimerEvent: {}
[72.513943] (-) TimerEvent: {}
[72.616054] (-) TimerEvent: {}
[72.716262] (-) TimerEvent: {}
[72.816514] (-) TimerEvent: {}
[72.916773] (-) TimerEvent: {}
[73.018840] (-) TimerEvent: {}
[73.119101] (-) TimerEvent: {}
[73.219340] (-) TimerEvent: {}
[73.322151] (-) TimerEvent: {}
[73.422352] (-) TimerEvent: {}
[73.524289] (-) TimerEvent: {}
[73.624537] (-) TimerEvent: {}
[73.724746] (-) TimerEvent: {}
[73.825011] (-) TimerEvent: {}
[73.927449] (-) TimerEvent: {}
[74.027662] (-) TimerEvent: {}
[74.129299] (-) TimerEvent: {}
[74.229553] (-) TimerEvent: {}
[74.329821] (-) TimerEvent: {}
[74.430489] (-) TimerEvent: {}
[74.532278] (-) TimerEvent: {}
[74.632483] (-) TimerEvent: {}
[74.732719] (-) TimerEvent: {}
[74.833136] (-) TimerEvent: {}
[74.934473] (-) TimerEvent: {}
[75.034695] (-) TimerEvent: {}
[75.134965] (-) TimerEvent: {}
[75.237129] (-) TimerEvent: {}
[75.337345] (-) TimerEvent: {}
[75.437555] (-) TimerEvent: {}
[75.537812] (-) TimerEvent: {}
[75.639201] (-) TimerEvent: {}
[75.739411] (-) TimerEvent: {}
[75.840369] (-) TimerEvent: {}
[75.940671] (-) TimerEvent: {}
[76.040901] (-) TimerEvent: {}
[76.141763] (-) TimerEvent: {}
[76.242027] (-) TimerEvent: {}
[76.344563] (-) TimerEvent: {}
[76.444812] (-) TimerEvent: {}
[76.545051] (-) TimerEvent: {}
[76.645261] (-) TimerEvent: {}
[76.745519] (-) TimerEvent: {}
[76.845785] (-) TimerEvent: {}
[76.946049] (-) TimerEvent: {}
[77.046255] (-) TimerEvent: {}
[77.146507] (-) TimerEvent: {}
[77.246780] (-) TimerEvent: {}
[77.347050] (-) TimerEvent: {}
[77.447257] (-) TimerEvent: {}
[77.547514] (-) TimerEvent: {}
[77.647772] (-) TimerEvent: {}
[77.748044] (-) TimerEvent: {}
[77.848280] (-) TimerEvent: {}
[77.948542] (-) TimerEvent: {}
[78.048795] (-) TimerEvent: {}
[78.149047] (-) TimerEvent: {}
[78.249250] (-) TimerEvent: {}
[78.349506] (-) TimerEvent: {}
[78.449765] (-) TimerEvent: {}
[78.550047] (-) TimerEvent: {}
[78.650243] (-) TimerEvent: {}
[78.750494] (-) TimerEvent: {}
[78.850751] (-) TimerEvent: {}
[78.951023] (-) TimerEvent: {}
[79.051245] (-) TimerEvent: {}
[79.152059] (-) TimerEvent: {}
[79.252323] (-) TimerEvent: {}
[79.352588] (-) TimerEvent: {}
[79.452843] (-) TimerEvent: {}
[79.553099] (-) TimerEvent: {}
[79.653373] (-) TimerEvent: {}
[79.753638] (-) TimerEvent: {}
[79.853849] (-) TimerEvent: {}
[79.954099] (-) TimerEvent: {}
[80.054337] (-) TimerEvent: {}
[80.154595] (-) TimerEvent: {}
[80.254857] (-) TimerEvent: {}
[80.355107] (-) TimerEvent: {}
[80.455358] (-) TimerEvent: {}
[80.555611] (-) TimerEvent: {}
[80.656406] (-) TimerEvent: {}
[80.756624] (-) TimerEvent: {}
[80.856838] (-) TimerEvent: {}
[80.958054] (-) TimerEvent: {}
[81.058256] (-) TimerEvent: {}
[81.158473] (-) TimerEvent: {}
[81.258687] (-) TimerEvent: {}
[81.358903] (-) TimerEvent: {}
[81.459136] (-) TimerEvent: {}
[81.561056] (-) TimerEvent: {}
[81.661258] (-) TimerEvent: {}
[81.761514] (-) TimerEvent: {}
[81.861772] (-) TimerEvent: {}
[81.964054] (-) TimerEvent: {}
[82.064320] (-) TimerEvent: {}
[82.164579] (-) TimerEvent: {}
[82.264839] (-) TimerEvent: {}
[82.365093] (-) TimerEvent: {}
[82.465338] (-) TimerEvent: {}
[82.566070] (-) TimerEvent: {}
[82.666348] (-) TimerEvent: {}
[82.766599] (-) TimerEvent: {}
[82.866851] (-) TimerEvent: {}
[82.967102] (-) TimerEvent: {}
[83.067338] (-) TimerEvent: {}
[83.167587] (-) TimerEvent: {}
[83.267792] (-) TimerEvent: {}
[83.368055] (-) TimerEvent: {}
[83.468255] (-) TimerEvent: {}
[83.568499] (-) TimerEvent: {}
[83.668756] (-) TimerEvent: {}
[83.769025] (-) TimerEvent: {}
[83.869229] (-) TimerEvent: {}
[83.969483] (-) TimerEvent: {}
[84.069751] (-) TimerEvent: {}
[84.170015] (-) TimerEvent: {}
[84.272631] (-) TimerEvent: {}
[84.372886] (-) TimerEvent: {}
[84.473099] (-) TimerEvent: {}
[84.573444] (-) TimerEvent: {}
[84.673723] (-) TimerEvent: {}
[84.774051] (-) TimerEvent: {}
[84.874391] (-) TimerEvent: {}
[84.975451] (-) TimerEvent: {}
[85.075799] (-) TimerEvent: {}
[85.176070] (-) TimerEvent: {}
[85.276280] (-) TimerEvent: {}
[85.376669] (-) TimerEvent: {}
[85.477608] (-) TimerEvent: {}
[85.578005] (-) TimerEvent: {}
[85.678242] (-) TimerEvent: {}
[85.778505] (-) TimerEvent: {}
[85.878772] (-) TimerEvent: {}
[85.979046] (-) TimerEvent: {}
[86.020057] (semnav) StdoutLine: {'line': b'[ 33%] Linking CXX executable navigation_semantic\n'}
[86.079157] (-) TimerEvent: {}
[86.179355] (-) TimerEvent: {}
[86.281234] (-) TimerEvent: {}
[86.381445] (-) TimerEvent: {}
[86.481640] (-) TimerEvent: {}
[86.581842] (-) TimerEvent: {}
[86.682135] (-) TimerEvent: {}
[86.782448] (-) TimerEvent: {}
[86.882774] (-) TimerEvent: {}
[86.983102] (-) TimerEvent: {}
[87.083404] (-) TimerEvent: {}
[87.183712] (-) TimerEvent: {}
[87.284020] (-) TimerEvent: {}
[87.384273] (-) TimerEvent: {}
[87.484580] (-) TimerEvent: {}
[87.584878] (-) TimerEvent: {}
[87.685190] (-) TimerEvent: {}
[87.786382] (-) TimerEvent: {}
[87.886612] (-) TimerEvent: {}
[87.990075] (-) TimerEvent: {}
[88.090317] (-) TimerEvent: {}
[88.191722] (-) TimerEvent: {}
[88.292690] (-) TimerEvent: {}
[88.393099] (-) TimerEvent: {}
[88.493443] (-) TimerEvent: {}
[88.593751] (-) TimerEvent: {}
[88.695078] (-) TimerEvent: {}
[88.795361] (-) TimerEvent: {}
[88.901092] (-) TimerEvent: {}
[89.001353] (-) TimerEvent: {}
[89.101680] (-) TimerEvent: {}
[89.201922] (-) TimerEvent: {}
[89.302178] (-) TimerEvent: {}
[89.402808] (-) TimerEvent: {}
[89.503046] (-) TimerEvent: {}
[89.603284] (-) TimerEvent: {}
[89.703511] (-) TimerEvent: {}
[89.803735] (-) TimerEvent: {}
[89.903962] (-) TimerEvent: {}
[90.005451] (-) TimerEvent: {}
[90.107282] (-) TimerEvent: {}
[90.207531] (-) TimerEvent: {}
[90.307787] (-) TimerEvent: {}
[90.408285] (-) TimerEvent: {}
[90.508559] (-) TimerEvent: {}
[90.609058] (-) TimerEvent: {}
[90.712070] (-) TimerEvent: {}
[90.812305] (-) TimerEvent: {}
[90.912631] (-) TimerEvent: {}
[91.012889] (-) TimerEvent: {}
[91.113149] (-) TimerEvent: {}
[91.213379] (-) TimerEvent: {}
[91.313603] (-) TimerEvent: {}
[91.413821] (-) TimerEvent: {}
[91.514038] (-) TimerEvent: {}
[91.615040] (-) TimerEvent: {}
[91.715242] (-) TimerEvent: {}
[91.815449] (-) TimerEvent: {}
[91.915662] (-) TimerEvent: {}
[92.015892] (-) TimerEvent: {}
[92.117048] (-) TimerEvent: {}
[92.217253] (-) TimerEvent: {}
[92.317458] (-) TimerEvent: {}
[92.401515] (semnav) StdoutLine: {'line': b'[ 33%] Built target navigation_semantic\n'}
[92.417616] (-) TimerEvent: {}
[92.517853] (-) TimerEvent: {}
[92.566814] (semnav) StdoutLine: {'line': b'[ 38%] Building CXX object CMakeFiles/navigation_humans.dir/src/navigation_humans.cpp.o\n'}
[92.618131] (-) TimerEvent: {}
[92.718421] (-) TimerEvent: {}
[92.818617] (-) TimerEvent: {}
[92.918868] (-) TimerEvent: {}
[93.019120] (-) TimerEvent: {}
[93.120583] (-) TimerEvent: {}
[93.224015] (-) TimerEvent: {}
[93.325080] (-) TimerEvent: {}
[93.425276] (-) TimerEvent: {}
[93.525562] (-) TimerEvent: {}
[93.625813] (-) TimerEvent: {}
[93.726055] (-) TimerEvent: {}
[93.827775] (-) TimerEvent: {}
[93.928040] (-) TimerEvent: {}
[94.028241] (-) TimerEvent: {}
[94.129036] (-) TimerEvent: {}
[94.229612] (-) TimerEvent: {}
[94.330127] (-) TimerEvent: {}
[94.430558] (-) TimerEvent: {}
[94.531421] (-) TimerEvent: {}
[94.632127] (-) TimerEvent: {}
[94.736382] (-) TimerEvent: {}
[94.837798] (-) TimerEvent: {}
[94.939500] (-) TimerEvent: {}
[95.040506] (-) TimerEvent: {}
[95.140752] (-) TimerEvent: {}
[95.242287] (-) TimerEvent: {}
[95.350178] (-) TimerEvent: {}
[95.450355] (-) TimerEvent: {}
[95.550557] (-) TimerEvent: {}
[95.650802] (-) TimerEvent: {}
[95.751075] (-) TimerEvent: {}
[95.851283] (-) TimerEvent: {}
[95.951489] (-) TimerEvent: {}
[96.051745] (-) TimerEvent: {}
[96.152014] (-) TimerEvent: {}
[96.254073] (-) TimerEvent: {}
[96.354273] (-) TimerEvent: {}
[96.456057] (-) TimerEvent: {}
[96.556263] (-) TimerEvent: {}
[96.656466] (-) TimerEvent: {}
[96.756675] (-) TimerEvent: {}
[96.856881] (-) TimerEvent: {}
[96.957063] (-) TimerEvent: {}
[97.057285] (-) TimerEvent: {}
[97.157561] (-) TimerEvent: {}
[97.257828] (-) TimerEvent: {}
[97.358089] (-) TimerEvent: {}
[97.458369] (-) TimerEvent: {}
[97.558613] (-) TimerEvent: {}
[97.658866] (-) TimerEvent: {}
[97.759109] (-) TimerEvent: {}
[97.859363] (-) TimerEvent: {}
[97.959624] (-) TimerEvent: {}
[98.059888] (-) TimerEvent: {}
[98.160094] (-) TimerEvent: {}
[98.260342] (-) TimerEvent: {}
[98.360605] (-) TimerEvent: {}
[98.460894] (-) TimerEvent: {}
[98.561239] (-) TimerEvent: {}
[98.661490] (-) TimerEvent: {}
[98.761755] (-) TimerEvent: {}
[98.862018] (-) TimerEvent: {}
[98.962222] (-) TimerEvent: {}
[99.062482] (-) TimerEvent: {}
[99.162740] (-) TimerEvent: {}
[99.263020] (-) TimerEvent: {}
[99.363238] (-) TimerEvent: {}
[99.463508] (-) TimerEvent: {}
[99.563724] (-) TimerEvent: {}
[99.664029] (-) TimerEvent: {}
[99.764299] (-) TimerEvent: {}
[99.864568] (-) TimerEvent: {}
[99.964828] (-) TimerEvent: {}
[100.065094] (-) TimerEvent: {}
[100.165348] (-) TimerEvent: {}
[100.265639] (-) TimerEvent: {}
[100.365849] (-) TimerEvent: {}
[100.466115] (-) TimerEvent: {}
[100.566358] (-) TimerEvent: {}
[100.666616] (-) TimerEvent: {}
[100.766879] (-) TimerEvent: {}
[100.867063] (-) TimerEvent: {}
[100.967338] (-) TimerEvent: {}
[101.067599] (-) TimerEvent: {}
[101.167864] (-) TimerEvent: {}
[101.268101] (-) TimerEvent: {}
[101.368358] (-) TimerEvent: {}
[101.468619] (-) TimerEvent: {}
[101.568881] (-) TimerEvent: {}
[101.669106] (-) TimerEvent: {}
[101.769360] (-) TimerEvent: {}
[101.869623] (-) TimerEvent: {}
[101.969885] (-) TimerEvent: {}
[102.070150] (-) TimerEvent: {}
[102.170457] (-) TimerEvent: {}
[102.270720] (-) TimerEvent: {}
[102.370999] (-) TimerEvent: {}
[102.471207] (-) TimerEvent: {}
[102.571469] (-) TimerEvent: {}
[102.671729] (-) TimerEvent: {}
[102.772030] (-) TimerEvent: {}
[102.872242] (-) TimerEvent: {}
[102.972501] (-) TimerEvent: {}
[103.072766] (-) TimerEvent: {}
[103.173037] (-) TimerEvent: {}
[103.273245] (-) TimerEvent: {}
[103.373503] (-) TimerEvent: {}
[103.473760] (-) TimerEvent: {}
[103.574036] (-) TimerEvent: {}
[103.674246] (-) TimerEvent: {}
[103.774505] (-) TimerEvent: {}
[103.874768] (-) TimerEvent: {}
[103.975051] (-) TimerEvent: {}
[104.075323] (-) TimerEvent: {}
[104.175582] (-) TimerEvent: {}
[104.275847] (-) TimerEvent: {}
[104.376105] (-) TimerEvent: {}
[104.477042] (-) TimerEvent: {}
[104.577256] (-) TimerEvent: {}
[104.677517] (-) TimerEvent: {}
[104.777725] (-) TimerEvent: {}
[104.877999] (-) TimerEvent: {}
[104.978396] (-) TimerEvent: {}
[105.078658] (-) TimerEvent: {}
[105.178950] (-) TimerEvent: {}
[105.279172] (-) TimerEvent: {}
[105.379437] (-) TimerEvent: {}
[105.479702] (-) TimerEvent: {}
[105.579957] (-) TimerEvent: {}
[105.680174] (-) TimerEvent: {}
[105.780434] (-) TimerEvent: {}
[105.880694] (-) TimerEvent: {}
[105.980958] (-) TimerEvent: {}
[106.081183] (-) TimerEvent: {}
[106.181442] (-) TimerEvent: {}
[106.281707] (-) TimerEvent: {}
[106.382004] (-) TimerEvent: {}
[106.482208] (-) TimerEvent: {}
[106.582467] (-) TimerEvent: {}
[106.682744] (-) TimerEvent: {}
[106.783015] (-) TimerEvent: {}
[106.883221] (-) TimerEvent: {}
[106.983478] (-) TimerEvent: {}
[107.083768] (-) TimerEvent: {}
[107.184037] (-) TimerEvent: {}
[107.284245] (-) TimerEvent: {}
[107.384510] (-) TimerEvent: {}
[107.484772] (-) TimerEvent: {}
[107.585031] (-) TimerEvent: {}
[107.685255] (-) TimerEvent: {}
[107.785521] (-) TimerEvent: {}
[107.885783] (-) TimerEvent: {}
[107.986055] (-) TimerEvent: {}
[108.086265] (-) TimerEvent: {}
[108.188046] (-) TimerEvent: {}
[108.288246] (-) TimerEvent: {}
[108.388460] (-) TimerEvent: {}
[108.488663] (-) TimerEvent: {}
[108.588865] (-) TimerEvent: {}
[108.689097] (-) TimerEvent: {}
[108.791047] (-) TimerEvent: {}
[108.892060] (-) TimerEvent: {}
[108.992273] (-) TimerEvent: {}
[109.092488] (-) TimerEvent: {}
[109.192713] (-) TimerEvent: {}
[109.292943] (-) TimerEvent: {}
[109.393171] (-) TimerEvent: {}
[109.493385] (-) TimerEvent: {}
[109.593653] (-) TimerEvent: {}
[109.693927] (-) TimerEvent: {}
[109.794166] (-) TimerEvent: {}
[109.894415] (-) TimerEvent: {}
[109.994829] (-) TimerEvent: {}
[110.095094] (-) TimerEvent: {}
[110.195371] (-) TimerEvent: {}
[110.295634] (-) TimerEvent: {}
[110.395898] (-) TimerEvent: {}
[110.496110] (-) TimerEvent: {}
[110.596374] (-) TimerEvent: {}
[110.696577] (-) TimerEvent: {}
[110.796851] (-) TimerEvent: {}
[110.897109] (-) TimerEvent: {}
[110.997359] (-) TimerEvent: {}
[111.097625] (-) TimerEvent: {}
[111.197886] (-) TimerEvent: {}
[111.298099] (-) TimerEvent: {}
[111.398343] (-) TimerEvent: {}
[111.498630] (-) TimerEvent: {}
[111.598891] (-) TimerEvent: {}
[111.699112] (-) TimerEvent: {}
[111.799361] (-) TimerEvent: {}
[111.899625] (-) TimerEvent: {}
[111.999889] (-) TimerEvent: {}
[112.101086] (-) TimerEvent: {}
[112.202389] (-) TimerEvent: {}
[112.302653] (-) TimerEvent: {}
[112.402912] (-) TimerEvent: {}
[112.503103] (-) TimerEvent: {}
[112.603354] (-) TimerEvent: {}
[112.703621] (-) TimerEvent: {}
[112.803881] (-) TimerEvent: {}
[112.904118] (-) TimerEvent: {}
[113.004367] (-) TimerEvent: {}
[113.104649] (-) TimerEvent: {}
[113.204941] (-) TimerEvent: {}
[113.305164] (-) TimerEvent: {}
[113.405424] (-) TimerEvent: {}
[113.505688] (-) TimerEvent: {}
[113.605948] (-) TimerEvent: {}
[113.706168] (-) TimerEvent: {}
[113.806421] (-) TimerEvent: {}
[113.906703] (-) TimerEvent: {}
[114.006966] (-) TimerEvent: {}
[114.107187] (-) TimerEvent: {}
[114.178231] (semnav) StderrLine: {'line': b'/home/neha/ros2_ws/src/semnav_migration/src/navigation_humans.cpp: In member function \xe2\x80\x98void NavigationHumansNode::human_update(const object_pose_interface_msgs::msg::KeypointDetections3D_<std::allocator<void> >::ConstPtr&)\xe2\x80\x99:\n'}
[114.178603] (semnav) StderrLine: {'line': b'/home/neha/ros2_ws/src/semnav_migration/src/navigation_humans.cpp:287:95: error: \xe2\x80\x98const object_pose_interface_msgs::msg::KeypointDetections3D_<std::allocator<void> >::_header_type\xe2\x80\x99 {aka \xe2\x80\x98const struct builtin_interfaces::msg::Time_<std::allocator<void> >\xe2\x80\x99} has no member named \xe2\x80\x98stamp\xe2\x80\x99\n'}
[114.178791] (semnav) StderrLine: {'line': b'  287 |                                                 pointCamera.header.stamp = human_data->header.stamp;\n'}
[114.178956] (semnav) StderrLine: {'line': b'      |                                                                                               ^~~~~\n'}
[114.179319] (semnav) StderrLine: {'line': b'/home/neha/ros2_ws/src/semnav_migration/src/navigation_humans.cpp:300:90: error: \xe2\x80\x98const object_pose_interface_msgs::msg::KeypointDetections3D_<std::allocator<void> >::_header_type\xe2\x80\x99 {aka \xe2\x80\x98const struct builtin_interfaces::msg::Time_<std::allocator<void> >\xe2\x80\x99} has no member named \xe2\x80\x98stamp\xe2\x80\x99\n'}
[114.179521] (semnav) StderrLine: {'line': b'  300 |                                             camera_optical_frame_id_, human_data->header.stamp,\n'}
[114.179671] (semnav) StderrLine: {'line': b'      |                                                                                          ^~~~~\n'}
[114.207344] (-) TimerEvent: {}
[114.307602] (-) TimerEvent: {}
[114.407870] (-) TimerEvent: {}
[114.508107] (-) TimerEvent: {}
[114.608317] (-) TimerEvent: {}
[114.710067] (-) TimerEvent: {}
[114.810283] (-) TimerEvent: {}
[114.910545] (-) TimerEvent: {}
[115.010806] (-) TimerEvent: {}
[115.111034] (-) TimerEvent: {}
[115.211244] (-) TimerEvent: {}
[115.311511] (-) TimerEvent: {}
[115.411806] (-) TimerEvent: {}
[115.512080] (-) TimerEvent: {}
[115.614050] (-) TimerEvent: {}
[115.714261] (-) TimerEvent: {}
[115.814530] (-) TimerEvent: {}
[115.914797] (-) TimerEvent: {}
[116.015086] (-) TimerEvent: {}
[116.115299] (-) TimerEvent: {}
[116.215564] (-) TimerEvent: {}
[116.315827] (-) TimerEvent: {}
[116.417046] (-) TimerEvent: {}
[116.517253] (-) TimerEvent: {}
[116.617509] (-) TimerEvent: {}
[116.717771] (-) TimerEvent: {}
[116.818044] (-) TimerEvent: {}
[116.918326] (-) TimerEvent: {}
[117.018593] (-) TimerEvent: {}
[117.118858] (-) TimerEvent: {}
[117.219104] (-) TimerEvent: {}
[117.319360] (-) TimerEvent: {}
[117.333464] (semnav) StderrLine: {'line': b'In file included from /opt/ros/jazzy/include/rclcpp/rclcpp/subscription_base.hpp:32,\n'}
[117.333754] (semnav) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:29,\n'}
[117.333916] (semnav) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/any_executable.hpp:20,\n'}
[117.334087] (semnav) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategy.hpp:25,\n'}
[117.334226] (semnav) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategies.hpp:18,\n'}
[117.334359] (semnav) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/executor_options.hpp:22,\n'}
[117.334497] (semnav) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/executor.hpp:38,\n'}
[117.334629] (semnav) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25,\n'}
[117.334786] (semnav) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/executors.hpp:21,\n'}
[117.334916] (semnav) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:172,\n'}
[117.335549] (semnav) StderrLine: {'line': b'                 from /home/neha/ros2_ws/src/semnav_migration/include/reactive_planner_lib.h:32,\n'}
[117.335726] (semnav) StderrLine: {'line': b'                 from /home/neha/ros2_ws/src/semnav_migration/src/navigation_humans.cpp:25:\n'}
[117.335878] (semnav) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98rclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (NavigationHumansNode::*(NavigationHumansNode*, std::_Placeholder<1>))(const std::shared_ptr<const object_pose_interface_msgs::msg::KeypointDetections3D_<std::allocator<void> > >&)>; MessageT = object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >; AllocatorT = std::allocator<void>]\xe2\x80\x99:\n'}
[117.336077] (semnav) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/subscription_factory.hpp:93:32:   required from \xe2\x80\x98rclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<topic_statistics::SubscriptionTopicStatistics>) [with MessageT = object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >; CallbackT = std::_Bind<void (NavigationHumansNode::*(NavigationHumansNode*, std::_Placeholder<1>))(const std::shared_ptr<const object_pose_interface_msgs::msg::KeypointDetections3D_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = Subscription<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >; MessageMemoryStrategyT = message_memory_strategy::MessageMemoryStrategy<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<message_memory_strategy::MessageMemoryStrategy<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::allocator<void> > >]\xe2\x80\x99\n'}
[117.336277] (semnav) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_subscription.hpp:121:63:   required from \xe2\x80\x98std::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const std::string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >; CallbackT = std::_Bind<void (NavigationHumansNode::*(NavigationHumansNode*, std::_Placeholder<1>))(const std::shared_ptr<const object_pose_interface_msgs::msg::KeypointDetections3D_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::allocator<void> > >]\xe2\x80\x99\n'}
[117.336445] (semnav) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_subscription.hpp:190:76:   required from \xe2\x80\x98std::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const std::string&, const QoS&, CallbackT&&, const SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >; CallbackT = std::_Bind<void (NavigationHumansNode::*(NavigationHumansNode*, std::_Placeholder<1>))(const std::shared_ptr<const object_pose_interface_msgs::msg::KeypointDetections3D_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = Subscription<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >; MessageMemoryStrategyT = message_memory_strategy::MessageMemoryStrategy<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::allocator<void> >; NodeT = Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<message_memory_strategy::MessageMemoryStrategy<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::allocator<void> > >]\xe2\x80\x99\n'}
[117.336605] (semnav) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:99:47:   required from \xe2\x80\x98std::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const std::string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >; CallbackT = std::_Bind<void (NavigationHumansNode::*(NavigationHumansNode*, std::_Placeholder<1>))(const std::shared_ptr<const object_pose_interface_msgs::msg::KeypointDetections3D_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::allocator<void> > >]\xe2\x80\x99\n'}
[117.336766] (semnav) StderrLine: {'line': b'/home/neha/ros2_ws/src/semnav_migration/src/navigation_humans.cpp:168:106:   required from here\n'}
[117.336910] (semnav) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_subscription_callback.hpp:396:23: error: no match for \xe2\x80\x98operator=\xe2\x80\x99 (operand types are \xe2\x80\x98rclcpp::detail::AnySubscriptionCallbackHelper<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::allocator<void>, false, false>::variant_type\xe2\x80\x99 {aka \xe2\x80\x98std::variant<std::function<void(const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >&)>, std::function<void(const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::default_delete<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::default_delete<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >\xe2\x80\x99} and \xe2\x80\x98rclcpp::detail::SubscriptionCallbackTypeHelper<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::_Bind<void (NavigationHumansNode::*(NavigationHumansNode*, std::_Placeholder<1>))(const std::shared_ptr<const object_pose_interface_msgs::msg::KeypointDetections3D_<std::allocator<void> > >&)>, void>::callback_type\xe2\x80\x99 {aka \xe2\x80\x98std::function<void(const std::shared_ptr<const object_pose_interface_msgs::msg::KeypointDetections3D_<std::allocator<void> > >&)>\xe2\x80\x99})\n'}
[117.337164] (semnav) StderrLine: {'line': b'  396 |     callback_variant_ = static_cast<typename scbth::callback_type>(callback);\n'}
[117.337307] (semnav) StderrLine: {'line': b'      |     ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n'}
[117.337451] (semnav) StderrLine: {'line': b'In file included from /opt/ros/jazzy/include/rclcpp/rclcpp/client.hpp:29,\n'}
[117.337591] (semnav) StderrLine: {'line': b'                 from /opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:24:\n'}
[117.337720] (semnav) StderrLine: {'line': b'/usr/include/c++/13/variant:1494:9: note: candidate: \xe2\x80\x98template<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Types = {std::function<void(const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >&)>, std::function<void(const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::default_delete<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::default_delete<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\xe2\x80\x99\n'}
[117.337925] (semnav) StderrLine: {'line': b' 1494 |         operator=(_Tp&& __rhs)\n'}
[117.338109] (semnav) StderrLine: {'line': b'      |         ^~~~~~~~\n'}
[117.338252] (semnav) StderrLine: {'line': b'/usr/include/c++/13/variant:1494:9: note:   template argument deduction/substitution failed:\n'}
[117.338389] (semnav) StderrLine: {'line': b'/usr/include/c++/13/variant: In substitution of \xe2\x80\x98template<class ... _Types> template<class _Tp, class> using std::variant<_Types>::__accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::function<void(const std::shared_ptr<const object_pose_interface_msgs::msg::KeypointDetections3D_<std::allocator<void> > >&)>&&; <template-parameter-2-2> = void; _Types = {std::function<void(const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >&)>, std::function<void(const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::default_delete<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::default_delete<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\xe2\x80\x99:\n'}
[117.338604] (semnav) StderrLine: {'line': b'/usr/include/c++/13/variant:1490:14:   required by substitution of \xe2\x80\x98template<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::function<void(const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >&)>, std::function<void(const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::default_delete<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::default_delete<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::function<void(const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >&)>, std::function<void(const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::default_delete<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::default_delete<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::function<void(const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >&)>, std::function<void(const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::default_delete<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::default_delete<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::function<void(const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >&)>, std::function<void(const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::default_delete<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::default_delete<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&> std::variant<std::function<void(const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >&)>, std::function<void(const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::default_delete<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::default_delete<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::operator=(_Tp&&) [with _Tp = std::function<void(const std::shared_ptr<const object_pose_interface_msgs::msg::KeypointDetections3D_<std::allocator<void> > >&)>]\xe2\x80\x99\n'}
[117.338993] (semnav) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_subscription_callback.hpp:396:23:   required from \xe2\x80\x98rclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (NavigationHumansNode::*(NavigationHumansNode*, std::_Placeholder<1>))(const std::shared_ptr<const object_pose_interface_msgs::msg::KeypointDetections3D_<std::allocator<void> > >&)>; MessageT = object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >; AllocatorT = std::allocator<void>]\xe2\x80\x99\n'}
[117.339162] (semnav) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/subscription_factory.hpp:93:32:   required from \xe2\x80\x98rclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<topic_statistics::SubscriptionTopicStatistics>) [with MessageT = object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >; CallbackT = std::_Bind<void (NavigationHumansNode::*(NavigationHumansNode*, std::_Placeholder<1>))(const std::shared_ptr<const object_pose_interface_msgs::msg::KeypointDetections3D_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = Subscription<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >; MessageMemoryStrategyT = message_memory_strategy::MessageMemoryStrategy<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<message_memory_strategy::MessageMemoryStrategy<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::allocator<void> > >]\xe2\x80\x99\n'}
[117.339323] (semnav) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_subscription.hpp:121:63:   required from \xe2\x80\x98std::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const std::string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >; CallbackT = std::_Bind<void (NavigationHumansNode::*(NavigationHumansNode*, std::_Placeholder<1>))(const std::shared_ptr<const object_pose_interface_msgs::msg::KeypointDetections3D_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::allocator<void> > >]\xe2\x80\x99\n'}
[117.339499] (semnav) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_subscription.hpp:190:76:   required from \xe2\x80\x98std::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const std::string&, const QoS&, CallbackT&&, const SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >; CallbackT = std::_Bind<void (NavigationHumansNode::*(NavigationHumansNode*, std::_Placeholder<1>))(const std::shared_ptr<const object_pose_interface_msgs::msg::KeypointDetections3D_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = Subscription<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >; MessageMemoryStrategyT = message_memory_strategy::MessageMemoryStrategy<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::allocator<void> >; NodeT = Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<message_memory_strategy::MessageMemoryStrategy<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::allocator<void> > >]\xe2\x80\x99\n'}
[117.339655] (semnav) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:99:47:   required from \xe2\x80\x98std::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const std::string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >; CallbackT = std::_Bind<void (NavigationHumansNode::*(NavigationHumansNode*, std::_Placeholder<1>))(const std::shared_ptr<const object_pose_interface_msgs::msg::KeypointDetections3D_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::allocator<void> > >]\xe2\x80\x99\n'}
[117.339820] (semnav) StderrLine: {'line': b'/home/neha/ros2_ws/src/semnav_migration/src/navigation_humans.cpp:168:106:   required from here\n'}
[117.339955] (semnav) StderrLine: {'line': b'/usr/include/c++/13/variant:1407:15: error: no type named \xe2\x80\x98type\xe2\x80\x99 in \xe2\x80\x98struct std::enable_if<false, void>\xe2\x80\x99\n'}
[117.340128] (semnav) StderrLine: {'line': b' 1407 |         using __accepted_type = __to_type<__accepted_index<_Tp>>;\n'}
[117.340267] (semnav) StderrLine: {'line': b'      |               ^~~~~~~~~~~~~~~\n'}
[117.340398] (semnav) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98rclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (NavigationHumansNode::*(NavigationHumansNode*, std::_Placeholder<1>))(const std::shared_ptr<const object_pose_interface_msgs::msg::KeypointDetections3D_<std::allocator<void> > >&)>; MessageT = object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >; AllocatorT = std::allocator<void>]\xe2\x80\x99:\n'}
[117.340569] (semnav) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/subscription_factory.hpp:93:32:   required from \xe2\x80\x98rclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<topic_statistics::SubscriptionTopicStatistics>) [with MessageT = object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >; CallbackT = std::_Bind<void (NavigationHumansNode::*(NavigationHumansNode*, std::_Placeholder<1>))(const std::shared_ptr<const object_pose_interface_msgs::msg::KeypointDetections3D_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = Subscription<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >; MessageMemoryStrategyT = message_memory_strategy::MessageMemoryStrategy<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<message_memory_strategy::MessageMemoryStrategy<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::allocator<void> > >]\xe2\x80\x99\n'}
[117.340722] (semnav) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_subscription.hpp:121:63:   required from \xe2\x80\x98std::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const std::string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >; CallbackT = std::_Bind<void (NavigationHumansNode::*(NavigationHumansNode*, std::_Placeholder<1>))(const std::shared_ptr<const object_pose_interface_msgs::msg::KeypointDetections3D_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::allocator<void> > >]\xe2\x80\x99\n'}
[117.340871] (semnav) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/create_subscription.hpp:190:76:   required from \xe2\x80\x98std::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const std::string&, const QoS&, CallbackT&&, const SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >; CallbackT = std::_Bind<void (NavigationHumansNode::*(NavigationHumansNode*, std::_Placeholder<1>))(const std::shared_ptr<const object_pose_interface_msgs::msg::KeypointDetections3D_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = Subscription<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >; MessageMemoryStrategyT = message_memory_strategy::MessageMemoryStrategy<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::allocator<void> >; NodeT = Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<message_memory_strategy::MessageMemoryStrategy<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::allocator<void> > >]\xe2\x80\x99\n'}
[117.341074] (semnav) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:99:47:   required from \xe2\x80\x98std::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const std::string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >; CallbackT = std::_Bind<void (NavigationHumansNode::*(NavigationHumansNode*, std::_Placeholder<1>))(const std::shared_ptr<const object_pose_interface_msgs::msg::KeypointDetections3D_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::allocator<void> > >]\xe2\x80\x99\n'}
[117.341246] (semnav) StderrLine: {'line': b'/home/neha/ros2_ws/src/semnav_migration/src/navigation_humans.cpp:168:106:   required from here\n'}
[117.341381] (semnav) StderrLine: {'line': b'/usr/include/c++/13/variant:1430:16: note: candidate: \xe2\x80\x98std::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::function<void(const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >&)>, std::function<void(const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::default_delete<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::default_delete<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\xe2\x80\x99\n'}
[117.341559] (semnav) StderrLine: {'line': b' 1430 |       variant& operator=(const variant&) = default;\n'}
[117.341701] (semnav) StderrLine: {'line': b'      |                ^~~~~~~~\n'}
[117.341835] (semnav) StderrLine: {'line': b'/usr/include/c++/13/variant:1430:26: note:   no known conversion for argument 1 from \xe2\x80\x98rclcpp::detail::SubscriptionCallbackTypeHelper<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::_Bind<void (NavigationHumansNode::*(NavigationHumansNode*, std::_Placeholder<1>))(const std::shared_ptr<const object_pose_interface_msgs::msg::KeypointDetections3D_<std::allocator<void> > >&)>, void>::callback_type\xe2\x80\x99 {aka \xe2\x80\x98std::function<void(const std::shared_ptr<const object_pose_interface_msgs::msg::KeypointDetections3D_<std::allocator<void> > >&)>\xe2\x80\x99} to \xe2\x80\x98const std::variant<std::function<void(const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >&)>, std::function<void(const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::default_delete<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::default_delete<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&\xe2\x80\x99\n'}
[117.342048] (semnav) StderrLine: {'line': b' 1430 |       variant& operator=(const variant&) = default;\n'}
[117.342200] (semnav) StderrLine: {'line': b'      |                          ^~~~~~~~~~~~~~\n'}
[117.342334] (semnav) StderrLine: {'line': b'/usr/include/c++/13/variant:1431:16: note: candidate: \xe2\x80\x98std::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::function<void(const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >&)>, std::function<void(const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::default_delete<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::default_delete<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\xe2\x80\x99\n'}
[117.342535] (semnav) StderrLine: {'line': b' 1431 |       variant& operator=(variant&&) = default;\n'}
[117.342670] (semnav) StderrLine: {'line': b'      |                ^~~~~~~~\n'}
[117.342800] (semnav) StderrLine: {'line': b'/usr/include/c++/13/variant:1431:26: note:   no known conversion for argument 1 from \xe2\x80\x98rclcpp::detail::SubscriptionCallbackTypeHelper<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::_Bind<void (NavigationHumansNode::*(NavigationHumansNode*, std::_Placeholder<1>))(const std::shared_ptr<const object_pose_interface_msgs::msg::KeypointDetections3D_<std::allocator<void> > >&)>, void>::callback_type\xe2\x80\x99 {aka \xe2\x80\x98std::function<void(const std::shared_ptr<const object_pose_interface_msgs::msg::KeypointDetections3D_<std::allocator<void> > >&)>\xe2\x80\x99} to \xe2\x80\x98std::variant<std::function<void(const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >&)>, std::function<void(const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::default_delete<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> >, std::default_delete<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<object_pose_interface_msgs::msg::SemanticMapObjectArray_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&&\xe2\x80\x99\n'}
[117.343031] (semnav) StderrLine: {'line': b' 1431 |       variant& operator=(variant&&) = default;\n'}
[117.343186] (semnav) StderrLine: {'line': b'      |                          ^~~~~~~~~\n'}
[117.419532] (-) TimerEvent: {}
[117.519811] (-) TimerEvent: {}
[117.620082] (-) TimerEvent: {}
[117.722050] (-) TimerEvent: {}
[117.822258] (-) TimerEvent: {}
[117.922528] (-) TimerEvent: {}
[118.022796] (-) TimerEvent: {}
[118.123066] (-) TimerEvent: {}
[118.223282] (-) TimerEvent: {}
[118.325085] (-) TimerEvent: {}
[118.425339] (-) TimerEvent: {}
[118.525603] (-) TimerEvent: {}
[118.625867] (-) TimerEvent: {}
[118.726114] (-) TimerEvent: {}
[118.826363] (-) TimerEvent: {}
[118.926640] (-) TimerEvent: {}
[119.026906] (-) TimerEvent: {}
[119.127110] (-) TimerEvent: {}
[119.227367] (-) TimerEvent: {}
[119.327631] (-) TimerEvent: {}
[119.427902] (-) TimerEvent: {}
[119.528136] (-) TimerEvent: {}
[119.628408] (-) TimerEvent: {}
[119.728667] (-) TimerEvent: {}
[119.828924] (-) TimerEvent: {}
[119.929094] (-) TimerEvent: {}
[120.029340] (-) TimerEvent: {}
[120.129600] (-) TimerEvent: {}
[120.229854] (-) TimerEvent: {}
[120.330102] (-) TimerEvent: {}
[120.430353] (-) TimerEvent: {}
[120.530613] (-) TimerEvent: {}
[120.630879] (-) TimerEvent: {}
[120.731104] (-) TimerEvent: {}
[120.831339] (-) TimerEvent: {}
[120.931639] (-) TimerEvent: {}
[121.032117] (-) TimerEvent: {}
[121.132319] (-) TimerEvent: {}
[121.233044] (-) TimerEvent: {}
[121.333248] (-) TimerEvent: {}
[121.433511] (-) TimerEvent: {}
[121.533775] (-) TimerEvent: {}
[121.634048] (-) TimerEvent: {}
[121.734259] (-) TimerEvent: {}
[121.834518] (-) TimerEvent: {}
[121.934810] (-) TimerEvent: {}
[122.035065] (-) TimerEvent: {}
[122.135274] (-) TimerEvent: {}
[122.235533] (-) TimerEvent: {}
[122.335794] (-) TimerEvent: {}
[122.436059] (-) TimerEvent: {}
[122.536264] (-) TimerEvent: {}
[122.636523] (-) TimerEvent: {}
[122.736777] (-) TimerEvent: {}
[122.838063] (-) TimerEvent: {}
[122.938271] (-) TimerEvent: {}
[123.038532] (-) TimerEvent: {}
[123.138782] (-) TimerEvent: {}
[123.239048] (-) TimerEvent: {}
[123.339316] (-) TimerEvent: {}
[123.441043] (-) TimerEvent: {}
[123.541259] (-) TimerEvent: {}
[123.641529] (-) TimerEvent: {}
[123.741814] (-) TimerEvent: {}
[123.842109] (-) TimerEvent: {}
[123.942753] (-) TimerEvent: {}
[124.043026] (-) TimerEvent: {}
[124.143239] (-) TimerEvent: {}
[124.243502] (-) TimerEvent: {}
[124.343771] (-) TimerEvent: {}
[124.444044] (-) TimerEvent: {}
[124.544255] (-) TimerEvent: {}
[124.644526] (-) TimerEvent: {}
[124.744790] (-) TimerEvent: {}
[124.845325] (-) TimerEvent: {}
[124.945580] (-) TimerEvent: {}
[125.048161] (-) TimerEvent: {}
[125.148390] (-) TimerEvent: {}
[125.248559] (-) TimerEvent: {}
[125.348796] (-) TimerEvent: {}
[125.449065] (-) TimerEvent: {}
[125.549281] (-) TimerEvent: {}
[125.649523] (-) TimerEvent: {}
[125.749785] (-) TimerEvent: {}
[125.850057] (-) TimerEvent: {}
[125.950267] (-) TimerEvent: {}
[126.050545] (-) TimerEvent: {}
[126.150814] (-) TimerEvent: {}
[126.251109] (-) TimerEvent: {}
[126.351559] (-) TimerEvent: {}
[126.451770] (-) TimerEvent: {}
[126.552044] (-) TimerEvent: {}
[126.652316] (-) TimerEvent: {}
[126.754046] (-) TimerEvent: {}
[126.854274] (-) TimerEvent: {}
[126.954463] (-) TimerEvent: {}
[127.054645] (-) TimerEvent: {}
[127.154833] (-) TimerEvent: {}
[127.255045] (-) TimerEvent: {}
[127.355245] (-) TimerEvent: {}
[127.455493] (-) TimerEvent: {}
[127.555752] (-) TimerEvent: {}
[127.656026] (-) TimerEvent: {}
[127.756233] (-) TimerEvent: {}
[127.856477] (-) TimerEvent: {}
[127.956745] (-) TimerEvent: {}
[128.057014] (-) TimerEvent: {}
[128.157224] (-) TimerEvent: {}
[128.257488] (-) TimerEvent: {}
[128.357749] (-) TimerEvent: {}
[128.458024] (-) TimerEvent: {}
[128.558232] (-) TimerEvent: {}
[128.658495] (-) TimerEvent: {}
[128.758751] (-) TimerEvent: {}
[128.859075] (-) TimerEvent: {}
[128.959282] (-) TimerEvent: {}
[129.059571] (-) TimerEvent: {}
[129.159833] (-) TimerEvent: {}
[129.260092] (-) TimerEvent: {}
[129.360330] (-) TimerEvent: {}
[129.460584] (-) TimerEvent: {}
[129.560851] (-) TimerEvent: {}
[129.661099] (-) TimerEvent: {}
[129.761341] (-) TimerEvent: {}
[129.861593] (-) TimerEvent: {}
[129.961842] (-) TimerEvent: {}
[130.062093] (-) TimerEvent: {}
[130.162333] (-) TimerEvent: {}
[130.262610] (-) TimerEvent: {}
[130.362861] (-) TimerEvent: {}
[130.463058] (-) TimerEvent: {}
[130.563270] (-) TimerEvent: {}
[130.663526] (-) TimerEvent: {}
[130.763792] (-) TimerEvent: {}
[130.864054] (-) TimerEvent: {}
[130.964275] (-) TimerEvent: {}
[131.064535] (-) TimerEvent: {}
[131.164793] (-) TimerEvent: {}
[131.265055] (-) TimerEvent: {}
[131.365265] (-) TimerEvent: {}
[131.465520] (-) TimerEvent: {}
[131.565781] (-) TimerEvent: {}
[131.666074] (-) TimerEvent: {}
[131.766325] (-) TimerEvent: {}
[131.866584] (-) TimerEvent: {}
[131.966841] (-) TimerEvent: {}
[132.067105] (-) TimerEvent: {}
[132.167353] (-) TimerEvent: {}
[132.267641] (-) TimerEvent: {}
[132.367899] (-) TimerEvent: {}
[132.377754] (semnav) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/navigation_humans.dir/build.make:76: CMakeFiles/navigation_humans.dir/src/navigation_humans.cpp.o] Error 1\n'}
[132.378421] (semnav) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:233: CMakeFiles/navigation_humans.dir/all] Error 2\n'}
[132.378818] (semnav) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[132.381480] (semnav) CommandEnded: {'returncode': 2}
[132.468022] (-) TimerEvent: {}
[132.486297] (semnav) JobEnded: {'identifier': 'semnav', 'rc': 2}
[132.497468] (-) EventReactorShutdown: {}
