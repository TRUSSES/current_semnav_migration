<!--
MIT License (modified)

Copyright (c) 2020 The Trustees of the University of Pennsylvania
Authors:
Vasileios Vasilopoulos <vvasilo@seas.upenn.edu>

Permission is hereby granted, free of charge, to any person obtaining a copy
of this **file** (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
-->

<launch>
	<!-- ARGUMENTS FOR NAMESPACES -->
	<arg name="pose_tracking"							default="pose_tracking"/>
	<arg name="sensor_integration"						default="sensor_integration"/>
	<arg name="robot_odometry"							default="robot_odometry"/>
	<arg name="transforms"								default="transforms"/>

	<!-- ARGUMENTS FOR TOPICS AND FRAMES -->
	<!-- Stereo camera -->
	<arg name="stereo_camera_rgb"						default="/zed/zed_node/rgb/image_rect_color"/>								<!-- Check your stereo camera -->
	<arg name="stereo_camera_rgb_info"					default="/zed/zed_node/rgb/camera_info"/>									<!-- Check your stereo camera -->
	<arg name="stereo_camera_odom_topic"				default="/zed/zed_node/odom"/>												<!-- Check your stereo camera -->

	<!-- Frame names -->
	<arg name="stereo_camera_frame"						default="/base_link"/>														<!-- Check your stereo camera -->
	<arg name="robot_frame"								default="/base_footprint"/>													<!-- Check Turtlebot -->
	<arg name="lidar_frame"								default="/laser"/>
	<arg name="odom_frame"								default="/odom"/>
	<arg name="map_frame"								default="/map"/>

	<!-- State estimator -->
	<arg name="robot_odom_topic"						default="/kobuki/odom"/>													<!-- Check Turtlebot -->
	<arg name="robot_odom_republished_topic"			default="kobuki_odom"/>
	<arg name="stereo_camera_odom_republished_topic"	default="zed_odom"/>
	<arg name="robot_odom_filtered_topic"				default="odom_fused"/>

	<!-- Semantic map publisher -->
	<arg name="object_poses_topic"						default="semslam/landmarks_poses"/>											<!-- Check Semantic SLAM -->
	<arg name="mesh_location"							default="$(find semslam)/models/meshes/"/>
	<arg name="semantic_map_topic"						default="semantic_map"/>

	<!-- Laserscan sparsifier -->
	<arg name="lidar_scan_raw_topic"					default="lidar_scan_raw"/>
	<arg name="lidar_scan_sparse_topic"					default="lidar_scan"/>

	<!-- Teleop parameter -->
	<arg name="teleop"									default="true"/>

	<!-- Use sim time -->
	<param name="/use_sim_time"							value="true"/>

	<!-- Uncompress -->
	<node pkg="image_transport" type="republish" name="rgb_compress" args="compressed in:=/zed/zed_node/rgb/image_rect_color raw out:=/zed/zed_node/rgb/image_rect_color"/>

	<!-- Launch the semantic mapping pipeline -->
	<!-- Make sure to modify parameters related to the network pipeline there -->
	<include file = "$(find semslam)/launch/turtlebot_darknet.launch" ns="pose_tracking">
		<arg name="cam_topic"							value="$(arg stereo_camera_rgb)"/>
		<arg name="cam_info_topic"						value="$(arg stereo_camera_rgb_info)"/>
		<arg name="odom_topic"							value="$(arg stereo_camera_odom_topic)"/>
		<arg name="global_frame"						value="$(arg map_frame)"/>
		<arg name="robot_frame"							value="$(arg stereo_camera_frame)"/>
	</include>


	<!-- Define the transform between the ZED frame and the robot frame -->
	<node pkg="tf" type="static_transform_publisher" name="robot_to_cam" ns="$(arg transforms)" args="-0.107 0.033 0 3.14 0 0 $(arg stereo_camera_frame) $(arg robot_frame) 5" />

	<!-- Define the transform between the LIDAR frame and the robot frame -->
	<node pkg="tf" type="static_transform_publisher" name="lidar_to_cam" ns="$(arg transforms)" args="-0.186 0.033 0 3.14 0 0 $(arg stereo_camera_frame) $(arg lidar_frame) 5" />
	
	<!-- Launch semantic map publisher and publish polygons in the map frame -->
	<node pkg="semnav" type="semslam_polygon_publisher.py" name="semslam_polygon_publisher" ns="$(arg pose_tracking)" output="screen">
		<param name="mesh_location"						value="$(arg mesh_location)"/>
		<param name="object_poses_topic"				value="$(arg object_poses_topic)"/>
		<param name="semantic_map_topic"				value="$(arg semantic_map_topic)"/>
	</node>

	<!-- Launch RViz -->
	<node pkg="rviz" type="rviz" name="rviz" args="-d /home/kodlab/.rviz/semslam_robot.rviz" />

	<!-- Play bag file -->
	<node pkg="rosbag" type="play" name="rosbag1" output="log" args="/home/kodlab/out_camera.bag -d 3 -s 1 --clock" />
	<node pkg="rosbag" type="play" name="rosbag2" output="log" args="/home/kodlab/out_odom.bag -d 3 -s 1"/>

	<!-- Record -->
	<node name="rosbag_record" pkg="rosbag" type="record" args="/pose_tracking/semantic_map /pose_tracking/semslam/robot_odom /pose_tracking/semslam/landmarks_poses /pose_tracking/semslam/landmarks /zed/zed_node/odom /pose_tracking/semslam/img_keypoints /pose_tracking/pose_estimator/heatmap /tf /tf_static" output="screen"/>
</launch>
