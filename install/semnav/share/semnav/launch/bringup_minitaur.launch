<!--
MIT License (modified)

Copyright (c) 2020 The Trustees of the University of Pennsylvania
Authors:
Vasileios Vasilopoulos <vvasilo@seas.upenn.edu>

Permission is hereby granted, free of charge, to any person obtaining a copy
of this **file** (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
-->

<launch>
	<!-- ARGUMENTS FOR NAMESPACES -->
	<arg name="sensor_integration"						default="sensor_integration"/>

	<!-- ARGUMENTS FOR TOPICS AND FRAMES -->
	<!-- Frame names -->
	<arg name="lidar_frame"								default="laser"/>

	<!-- Laserscan sparsifier -->
	<arg name="lidar_scan_raw_topic"					default="lidar_scan_raw"/>
	<arg name="lidar_scan_sparse_topic"					default="lidar_scan"/>

	<!-- RGB camera -->
	<arg name="video_device"							default="/dev/video1"/>						<!-- Check your RGB camera -->


	<!-- Launch the ZED camera and ignore its odometry -->
	<!-- Make sure to set the camera in 2D mode and also modify its frequency to roughly 10Hz -->
	<include file = "$(find zed_wrapper)/launch/zed_no_tf.launch"/>

	<!-- Launch Vicon -->
	<!-- Make sure to set publish_tf to false in this launch file and change the fixed_frame_id to the odom frame name -->
	<include file = "$(find mocap_vicon)/launch/vicon.launch"/>

	<!-- Launch LIDAR sensor -->
	<!-- <node pkg="urg_node" type="urg_node" name="lidar_node" ns="$(arg sensor_integration)" output="screen">
		<remap from="scan"								to="$(arg lidar_scan_raw_topic)"/>

		<param name="frame_id"							value="$(arg lidar_frame)"/>
	</node> -->

	<!-- Launch laserscan sparsifier to downsample the sensor LIDAR data -->
	<!-- <node pkg="laser_scan_sparsifier" type="laser_scan_sparsifier_node" name="laserscan_sparsifier_lidar" ns="$(arg sensor_integration)" output="screen">
		<remap from="scan"								to="$(arg lidar_scan_raw_topic)"/>
		<remap from="scan_sparse"						to="$(arg lidar_scan_sparse_topic)"/> -->

		<!-- Sparsifier downsampling ratio -->
		<!-- <param name="target_size"       				value="101"/>
	</node> -->

	<!-- Launch fake LIDAR node -->
    <node name="fake_lidar_publisher" pkg="semnav" type="fake_lidar_publisher" ns="$(arg sensor_integration)" output="screen">
        <param name="pub_lidar_topic"                   value="$(arg lidar_scan_sparse_topic)"/>
    </node>

	<!-- Launch the RGB camera -->
	<!-- <node name="usb_cam" pkg="usb_cam" type="usb_cam_node" output="screen">
    	<param name="video_device" 						value="$(arg video_device)"/>
    	<param name="image_width" 						value="640"/>
    	<param name="image_height" 						value="480"/>
    	<param name="pixel_format" 						value="yuyv"/>
    	<param name="camera_frame_id" 					value="usb_cam"/>
    	<param name="io_method" 						value="mmap"/>
  	</node> -->
</launch>
